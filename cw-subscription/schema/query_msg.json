{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "anyOf": [
    {
      "description": "Query one plan, response type is Plan<Addr>",
      "type": "object",
      "required": [
        "plan"
      ],
      "properties": {
        "plan": {
          "type": "object",
          "required": [
            "plan_id"
          ],
          "properties": {
            "plan_id": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "List plans, support pagination, response type is PlansResponse",
      "type": "object",
      "required": [
        "list_plans"
      ],
      "properties": {
        "list_plans": {
          "type": "object",
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Query one subscription, response type is Subscription",
      "type": "object",
      "required": [
        "subscription"
      ],
      "properties": {
        "subscription": {
          "type": "object",
          "required": [
            "plan_id",
            "subscriber"
          ],
          "properties": {
            "plan_id": {
              "$ref": "#/definitions/Uint128"
            },
            "subscriber": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "List subscriptions, support pagination, response type is SubscriptionsResponse",
      "type": "object",
      "required": [
        "list_subscriptions"
      ],
      "properties": {
        "list_subscriptions": {
          "type": "object",
          "required": [
            "plan_id"
          ],
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "plan_id": {
              "$ref": "#/definitions/Uint128"
            },
            "start_after": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "List collectible subscriptions, response type is SubscriptionsResponse",
      "type": "object",
      "required": [
        "collectible_subscriptions"
      ],
      "properties": {
        "collectible_subscriptions": {
          "type": "object",
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
